@startuml
collections Frontend    as Frontend
participant EZWH        as EZWH
participant Resolver    as Resolver
participant HTTPrequest as HTTPrequest
participant Warehouse   as Warehouse
participant RestockOrder as RestockOrder
participant DatabaseHelper as DatabaseHelper

note over Frontend
The Frontend include GUI e DataInterface
end note
note over Frontend
The first HTTP request
covers the first four points
of the scenario
end note
Frontend -> EZWH  : send HTTP request
activate EZWH 
EZWH -> Resolver : resolve(request : HTTPrequest)
activate Resolver
Resolver -> HTTPrequest : getBody()
activate HTTPrequest
HTTPrequest --> Resolver : Obj
deactivate HTTPrequest
Resolver -> HTTPrequest : getMethod()
activate HTTPrequest
HTTPrequest --> Resolver : Method
deactivate HTTPrequest
note over Resolver  
knowing the method (GET) of the HTTPrequest , 
the right methods of the warehouse will be called
end note
Resolver -> Warehouse : getRestockOrders(id : Obj.Id)
activate Warehouse 
note over Warehouse
with this query we get the right RestockOrder,
if the query will respond with a null or error, we throw an execption
end note
Warehouse -> DatabaseHelper  : queryDB(GetQueryTemplate, dataRestockOrder)
activate DatabaseHelper
DatabaseHelper --> Warehouse : {Integer, RestockOrder}
deactivate DatabaseHelper
Warehouse --> Resolver : {Integer, Object}
deactivate Warehouse
Resolver --> EZWH : HTTPresponse
deactivate Resolver
note over Frontend
The second HTTP request
covers the remaining points
of the scenario
end note
EZWH --> Frontend : send HTTP response
deactivate EZWH
Frontend -> EZWH  : send HTTP request
activate EZWH 
EZWH -> Resolver : resolve(request : HTTPrequest)
activate Resolver
Resolver -> HTTPrequest : getBody()
activate HTTPrequest
HTTPrequest --> Resolver : Obj
deactivate HTTPrequest
Resolver -> HTTPrequest : getMethod()
activate HTTPrequest
HTTPrequest --> Resolver : Method
deactivate HTTPrequest
note over Resolver  
knowing the method (GET) of the HTTPrequest , 
the right methods of the warehouse will be called
end note
Resolver -> Warehouse : postReturnOrder(newReturnOrder : Obj)
activate Warehouse 
Warehouse -> DatabaseHelper  : queryDB(postQueryTemplate, dataReturnkOrder)
activate DatabaseHelper
DatabaseHelper --> Warehouse : Object
deactivate DatabaseHelper
note over Warehouse
with this query the state of the  SKUitems 
is changed to delivered
end note
Warehouse -> DatabaseHelper  : queryDB(updateQueryTemplate, dataSKUItems)
activate DatabaseHelper
DatabaseHelper --> Warehouse : Object
deactivate DatabaseHelper
note over Warehouse
with this query the availability of the  SKUitems 
decreased
end note
Warehouse -> DatabaseHelper  : queryDB(updateQueryTemplate, dataSKUItems)
activate DatabaseHelper
DatabaseHelper --> Warehouse : Object
deactivate DatabaseHelper
note over Warehouse
with this query the position of the  SKUitems 
is increased
end note
Warehouse -> DatabaseHelper  : queryDB(updateQueryTemplate, dataPosition)
activate DatabaseHelper
DatabaseHelper --> Warehouse : Object
deactivate DatabaseHelper
Warehouse --> Resolver : {Integer, Object}
deactivate Warehouse
Resolver --> EZWH : HTTPresponse
deactivate Resolver
EZWH --> Frontend : send HTTP response
deactivate EZWH